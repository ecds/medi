# Generated by Django 3.1 on 2021-03-01 21:57

from django.db import migrations, models
import django.db.models.deletion
import django_date_extensions.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChildAge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ChildLegitimacy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Child Legitimacy Statuses',
            },
        ),
        migrations.CreateModel(
            name='DocumentDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='EnslavementStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Enslavement Statuses',
            },
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('age_literal', models.CharField(blank=True, max_length=255, null=True, verbose_name='Age as written')),
                ('age_category', models.CharField(blank=True, max_length=255, null=True, verbose_name='Age category')),
            ],
            options={
                'verbose_name_plural': 'Family Members',
            },
        ),
        migrations.CreateModel(
            name='FamilyMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(blank=True, max_length=255, null=True)),
                ('family_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.familymember')),
            ],
        ),
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Other',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('lon', models.DecimalField(blank=True, decimal_places=12, max_digits=15, null=True, verbose_name='longitude')),
                ('lat', models.DecimalField(blank=True, decimal_places=12, max_digits=15, null=True, verbose_name='latitude')),
            ],
        ),
        migrations.CreateModel(
            name='RelatedOther',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.other')),
            ],
            options={
                'verbose_name_plural': 'Related Others',
            },
        ),
        migrations.CreateModel(
            name='RelatedWoman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Related Women',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Woman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('name_variations', models.CharField(blank=True, help_text='Variations of name separated by semi-colons', max_length=255, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Single / Daughter of', 'Single / Daughter of'), ('Married', 'Married'), ('Widowed', 'Widowed'), ('Abandoned Spouse', 'Abandoned Spouse'), ('Concubinary Partner', 'Concubinary Partner')], max_length=255, null=True)),
                ('conc_or_pro', models.CharField(blank=True, choices=[('Concubine', 'Concubine'), ('Prostitute', 'Prostitute')], max_length=255, null=True, verbose_name='Concubine or Prostitute')),
                ('age_literal', models.CharField(blank=True, max_length=255, null=True, verbose_name='Age as written')),
                ('age_category', models.CharField(blank=True, choices=[('Child', 'Child'), ('Adolescent', 'Adolescent'), ('Nubile / fadrina', 'Nubile / fadrina'), ('Childbearing', 'Childbearing'), ('Middle Aged', 'Middle Aged'), ('Elderly', 'Elderly'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Age category')),
                ('activity', models.CharField(blank=True, help_text="e.g. 'buying property'", max_length=255, null=True, verbose_name='Type of activity')),
                ('occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_freq', models.BooleanField(blank=True, max_length=255, null=True, verbose_name='Sold more than once?')),
                ('sale_details', models.TextField(blank=True, null=True)),
                ('enslavement_details', models.TextField(blank=True, null=True)),
                ('enslavement_occupation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Occupation as enslaved person')),
                ('date_as_written', models.CharField(blank=True, max_length=255, null=True)),
                ('date_cal', django_date_extensions.fields.ApproximateDateField(blank=True, help_text="Accepts approximate dates like '1350' or 'March 1402'", null=True, verbose_name='Calendar date')),
                ('date_range', models.CharField(blank=True, help_text="Enter a period of time, e.g. 'early 13th century'", max_length=255, null=True)),
                ('transcription', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('archive', models.CharField(blank=True, max_length=255, null=True)),
                ('shelfmark', models.CharField(blank=True, max_length=255, null=True)),
                ('data_enterer', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.documentdescription', verbose_name='Description of document')),
                ('document_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.documenttype', verbose_name='Type of document')),
                ('enslavement_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.enslavementstatus')),
                ('family_members', models.ManyToManyField(related_name='family_members', through='app.FamilyMembership', to='app.FamilyMember')),
                ('identifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.identifier')),
                ('location_of_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_of_transaction', to='app.place', verbose_name='Location of transaction/act')),
                ('location_sold', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_sold', to='app.place')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='origin', to='app.place', verbose_name='Place of origin')),
                ('others', models.ManyToManyField(related_name='others', through='app.RelatedOther', to='app.Other')),
                ('related_women', models.ManyToManyField(related_name='_woman_related_women_+', through='app.RelatedWoman', to='app.Woman')),
            ],
            options={
                'verbose_name_plural': 'women',
            },
        ),
        migrations.AddField(
            model_name='relatedwoman',
            name='related_woman',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_woman', to='app.woman'),
        ),
        migrations.AddField(
            model_name='relatedwoman',
            name='woman',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='woman', to='app.woman'),
        ),
        migrations.AddField(
            model_name='relatedother',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.role'),
        ),
        migrations.AddField(
            model_name='relatedother',
            name='woman',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.woman'),
        ),
        migrations.AddField(
            model_name='familymembership',
            name='woman',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.woman'),
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('age_literal', models.CharField(blank=True, max_length=255, null=True, verbose_name='Age as written')),
                ('age_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.childage', verbose_name='Age category')),
                ('father', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.familymember')),
                ('legitimacy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.childlegitimacy')),
                ('woman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.woman')),
            ],
            options={
                'verbose_name_plural': 'Children',
            },
        ),
    ]
